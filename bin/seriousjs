#! /usr/bin/env node

var fs = require('fs');
var program = require('commander');
var path = require('path');

var sjs = require(path.join(__dirname, '../'));

program
  .version(require('../package.json').version)
  .option('--create-app', 'create a new client/server pair with given name')
  .option('--compile-seriousjs', 'compile the language and embeddable script, then exit')
  .usage('[options] file/project <args...>')
  .parse(process.argv);

if (program.compileSeriousjs) {
  //When sjs was require'd, it was compiled.  So we're good on the parser, but
  //we need to make the seriousjs-embed.js file as well.
  sjs._buildEmbedded();

  //We also have to delete any node_modules in the templates directory, since
  //npm pack apparently will never ignore node_modules...
  var sjsUtil = require('../src/binUtil/util');
  var templatePath = __dirname + '/../templates';
  var templates = fs.readdirSync(templatePath);
  for (var i = 0, m = templates.length; i < m; i++) {
    var templateMods = path.join(templatePath, templates[i], 'node_modules');
    if (fs.existsSync(templateMods)) {
      sjsUtil.rmDir(templateMods);
    }
  }
}
else if (program.args.length >= 1) {
  fileOrProject = program.args[0];
  if (program.createApp) {
    var project = require(path.join(__dirname, '../src/binUtil/project'));
    project.createApp(fileOrProject);
  }
  else {
    //Crop arguments down to just the script name and the other stuff
    process.argv = [ process.argv[0] ].concat(program.args);
    sjs.evalFile(fileOrProject);
  }
}
else {
  program.help();
}
