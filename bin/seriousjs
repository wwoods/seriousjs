#! /usr/bin/env node

var fs = require('fs');
var program = require('commander');
var path = require('path');

var sjs = require(path.join(__dirname, '../'));

program
  .version(require('../package.json').version)
  .usage('[options] file/project <args ...>');

program
  .command('compile-seriousjs')
  .option("--release")
  .description('compile the language and embeddable script')
  .action(function(options) {
    function postBuild(error) {
      if (error) {
        console.error(error);
        return;
      }

      //We also have to delete any node_modules in the templates directory, since
      //npm pack apparently will never ignore node_modules...
      var sjsUtil = require('../src/binUtil/util');
      var templatePath = __dirname + '/../templates';
      var templates = fs.readdirSync(templatePath);
      for (var i = 0, m = templates.length; i < m; i++) {
        var templateMods = path.join(templatePath, templates[i], 'node_modules');
        if (fs.existsSync(templateMods)) {
          sjsUtil.rmDir(templateMods);
        }
      }

      //If --release was specified, also copy to documentation
      if (options.release) {
        console.log("Copying lib/seriousjs-embed.js to documentation/lib");
        var src = path.join(__dirname, "../lib/seriousjs-embed.js");
        var dest = path.join(__dirname,
            "../documentation/lib/seriousjs-embed.js");
        require('child_process').exec("cp " + src + " " + dest);
      }
    }

    //When sjs was require'd, it was compiled.  So we're good on the parser, but
    //we need to make the seriousjs-embed.js file as well.
    sjs._buildEmbedded(postBuild);
  });

program
  .command('create-app <appname>')
  .description('create a client/server pair with given name')
  .action(function(appname) {
    var project = require(path.join(__dirname, '../src/binUtil/project'));
    project.createFromTemplate('app', appname);
  });

program
  .command('create-static <appname>')
  .description('create a client-only webpage with the given name')
  .action(function(appname) {
    var project = require(path.join(__dirname, '../src/binUtil/project'));
    project.createFromTemplate('static', appname);
  });

program
  .command('*')
  .description('run the given script with any arguments')
  .action(function(script) {
    //For whatever reason commander doesn't pass flags like --build in the
    //args array, even if they're unrecognized.  So we'll have to infer its
    //position.
    var realArgs = program.rawArgs.slice(program.rawArgs.indexOf(script));
    //Fake out process.argv for the script
    process.argv = [ process.argv[1] ].concat(realArgs);
    sjs.evalFile(script);
  });

program.parse(process.argv);

//No args
if (program.rawArgs.length === 2) {
  var repl = require("../src/binUtil/sjsRepl");
  repl.start();
}
